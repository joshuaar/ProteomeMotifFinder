<!doctype html>
<html ng-app="myApp">
    <head>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.js"></script>
        <script type="text/javascript">

            //app
            var myApp = angular.module('myApp', [], function ($interpolateProvider) {
                    $interpolateProvider.startSymbol('[[');
                     $interpolateProvider.endSymbol(']]');
                     });

        //This is the directive for splitting protein data correctly
            myApp.directive('proteinFormatter',
                function() {
                    return {
                        restrict: 'A',
                        link: function($scope, element, attrs) {
                            element.html("FAAA");
                          //  $scope.$watch( "regEx", function(val) {
                           //     element.html($scope.formatSeq($scope.i.seq));
                           // }, true );
                        }
                    };
                }
            );

        //This script is for displaying the filtered protein data
            myApp.controller('proteinDisplay',function($scope,$http,$timeout){
                {% autoescape false %}
                $scope.session={{session|json_encode}}
                {% endautoescape %}
                $scope.proteins = []
                $scope.showLoading = true;
                $scope.init = function(){
                    $scope.proteins = [$scope.session.sessID,"a","b"]
                    $http({method:"GET",url:"/orgs/"+$scope.session.sessID}).success(function(data,stat,head,conf){
                        $scope.proteins = data;
                        $scope.showLoading=false;
                        })
                };
                $scope.regExFilter=function(protein){
                    var patt=new RegExp($scope.filterText,"i");
                    return patt.test(protein.seq);
                };
                $scope.formatSeq=function(seq){
                    var patt = new RegExp($scope.filterText,"i");
                    var match = patt.exec(seq);
                    var start = match.index;
                    var text=match[0];
                    var end = start+text.length;
                    start = seq.slice(0,start);
                    end = seq.slice(end,seq.length);
                    var nChars = 50;
                    return seqLineSplit(start,nChars)+"<strong>"+text+"</strong>"+
                        seqLineSplit(end,nChars);
                };
                //Number of elements to show, and function for inceasing this value
                $scope.nToShow = 100;
                $scope.showMore = function(){
                    $scope.nToShow = $scope.nToShow + 100;
                };
                //The following is code to introduce a delay in regex matching
                //User types in pattern, it waits 400ms, then matches against
                //bound data
                $scope.filterText = '';
                var tempFilterText = '',
                    filterTextTimeout;
                $scope.$watch('regEx',function(val){
                    if (filterTextTimeout) $timeout.cancel(filterTextTimeout);
                    //window.alert("HIO")
                    tempFilterText = val;
                    filterTextTimeout = $timeout(function(){
                        $scope.filterText = tempFilterText;
                        //window.alert("HEU")
                        },100)
                    })
                //end delay code
            });

        function seqLineSplit(seq,nChars){
            out = "";                           
            for(var i=0; i<seq.length;i+=nChars){
                if(i+nChars <= seq.length)
                    out += seq.slice(i,i+nChars) + "<br>"
                else
                    out+= seq.slice(i,i+nChars)
            };
            return out;
        };
        </script>
        <script>
            angular.module('ng').filter('maxLines',function(){
                return function(input){
                    return input
                }
            })
        </script>
    </head>
    <body>
        <h1> Proteome Motif Finder </h1>
        <div ng-controller="proteinDisplay" ng-init="init()"> 
        <input type="text" ng-model="regEx" 
        placeholder="Enter a pattern (Perl Regular Expression)">
        <li ng-repeat="i in proteins|filter:regExFilter|limitTo:nToShow">
        [[i.header]]<br><div proteinFormatter="[[i.seq]]">[[i.seq]]</div>
        </li>
        <br>
        <img ng-show="showLoading" src="/ajax-loader.gif">
        <a href ng-click="showMore()">Show More</a>
    </div>

    </body>
</html>


